{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","error","handleChange","name","value","setState","handleSubmit","event","preventDefault","trim","props","onAdd","this","onSubmit","type","onChange","target","required","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6ff7c27.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    error: false,\n  };\n\n  handleChange = ({ name, value }) => this.setState({\n    [name]: value,\n    error: false,\n  });\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, imdbId } = this.state;\n\n    if (!title.trim() || !imdbId.trim()) {\n      this.setState({ error: true });\n\n      return;\n    }\n\n    this.props.onAdd(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      error: false,\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId, error } = this.state;\n\n    return (\n      <form\n        className=\"NewMovie\"\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"NewMovie__header\">\n          Add new movie\n        </h2>\n\n        <label>\n          <h3>\n            Movie title:\n          </h3>\n\n          <input\n            className=\"NewMovie__input\"\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={(event => this.handleChange(event.target))}\n            required\n          />\n        </label>\n\n        <label>\n          <h3>\n            Movie description:\n          </h3>\n\n          <textarea\n            className=\"NewMovie__textarea\"\n            name=\"description\"\n            value={description}\n            onChange={(event => this.handleChange(event.target))}\n          />\n        </label>\n\n        <label>\n          <h3>\n            Link to movie poster:\n          </h3>\n\n          <input\n            className=\"NewMovie__input\"\n            type=\"url\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={(event => this.handleChange(event.target))}\n            required\n          />\n        </label>\n\n        <label>\n          <h3>\n            Link to IMDB page of the movie:\n          </h3>\n\n          <input\n            className=\"NewMovie__input\"\n            type=\"url\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={(event => this.handleChange(event.target))}\n            required\n          />\n        </label>\n\n        <label>\n          <h3>\n            Movie&apos;s IMDB id:\n          </h3>\n\n          <input\n            className=\"NewMovie__input\"\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={(event => this.handleChange(event.target))}\n            required\n          />\n        </label>\n\n        <button\n          className=\"NewMovie__submit\"\n          type=\"submit\"\n          disabled={error}\n        >\n          Add\n        </button>\n\n        {error && <p className=\"error\">Please fill in the blank fields</p>}\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}